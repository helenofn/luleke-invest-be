CREATE SCHEMA IF NOT EXISTS LULEKE_INVEST;

/*User*/
drop table if exists luleke_invest.role_app_feature cascade;
drop table if exists luleke_invest.user_data cascade;
drop table if exists luleke_invest.user_data_role cascade;
drop table if exists luleke_invest.user_role cascade;
drop table if exists luleke_invest.user_status cascade;

/*Adress*/
drop table if exists luleke_invest.adress_country cascade;
drop table if exists luleke_invest.adress_state cascade;
drop table if exists luleke_invest.adress_city cascade;
drop table if exists luleke_invest.adress cascade;

/*Broker*/
drop table if exists luleke_invest.broker cascade;
drop table if exists luleke_invest.broker_status cascade;

/*Company*/
drop table if exists luleke_invest.company cascade;

/*StockExchange*/
drop table if exists luleke_invest.stock_exchange cascade;

/*FinancialAsset*/
drop table if exists luleke_invest.financial_asset_category cascade;
drop table if exists luleke_invest.financial_asset cascade;
drop table if exists luleke_invest.financial_asset_event cascade;
drop table if exists luleke_invest.financial_asset_event_bonus_share cascade;
drop table if exists luleke_invest.financial_asset_event_dividend cascade;
drop table if exists luleke_invest.financial_asset_event_inplit_split cascade;
drop table if exists luleke_invest.financial_asset_event_jcp cascade;

/*Quote*/
drop table if exists luleke_invest.financial_asset_quote cascade;

/*Wallet*/
drop table if exists luleke_invest.wallet cascade;
drop table if exists luleke_invest.financial_transaction_type;
drop table if exists luleke_invest.financial_transaction;

/*USER ################*/
create table IF NOT EXISTS luleke_invest.user_role (
 cd_role integer not null, 
 ds_name varchar(50) unique, 
 primary key (cd_role)
);

create table IF NOT EXISTS luleke_invest.app_feature (
 cd_feature integer not null, 
 ds_name varchar(50), 
 primary key (cd_feature)
);

create table IF NOT EXISTS luleke_invest.role_app_feature (
 cd_feature integer not null, 
 cd_role integer not null
);
alter table if exists luleke_invest.role_app_feature 
  add constraint fk_cd_feature01 foreign key (cd_feature) references luleke_invest.app_feature;
alter table if exists luleke_invest.role_app_feature 
 add constraint fk_cd_role01 foreign key (cd_role) references luleke_invest.user_role;

create table IF NOT EXISTS luleke_invest.user_status (
 cd_user_status integer not null, 
 ds_name varchar(50), 
 primary key (cd_user_status)
);

create table IF NOT EXISTS luleke_invest.user_data (
 cd_user_status integer, 
 cseq_user bigint generated by default as identity, 
 ds_cript_pass varchar(200), 
 ds_name varchar(100), 
 ds_email varchar(150) unique, 
 primary key (cseq_user)
);
alter table if exists luleke_invest.user_data 
 add constraint fk_cd_user_status01 foreign key (cd_user_status) references luleke_invest.user_status;

create table IF NOT EXISTS luleke_invest.user_data_role (
 cd_role integer not null, 
 cseq_user bigint not null
);
alter table if exists luleke_invest.user_data_role 
 add constraint fk_cd_role02 foreign key (cd_role) references luleke_invest.user_role;
alter table if exists luleke_invest.user_data_role
 add constraint fk_cseq_user01 foreign key (cseq_user) references luleke_invest.user_data;


/*ADRESS ################*/
create table IF NOT EXISTS luleke_invest.adress_country (
 cd_country integer, 
 ds_name varchar(70),
 primary key (cd_country)
);

create table IF NOT EXISTS luleke_invest.adress_state (
 cseq_state bigint generated by default as identity, 
 ds_sigla varchar(10) not null,
 ds_name varchar(70) not null,
 cd_country integer not null,
 primary key (cseq_state)
);
alter table if exists luleke_invest.adress_state 
 add constraint fk_cd_country01 foreign key (cd_country) references luleke_invest.adress_country;

create table IF NOT EXISTS luleke_invest.adress_city (
 cseq_city bigint generated by default as identity, 
 ds_name varchar(70) not null,
 cseq_state bigint not null,
 primary key (cseq_city)
);
alter table if exists luleke_invest.adress_city 
 add constraint fk_cseq_state01 foreign key (cseq_state) references luleke_invest.adress_state;

create table IF NOT EXISTS luleke_invest.adress (
 cseq_adress bigint generated by default as identity,
 cseq_city bigint not null,
 ds_district varchar(150) not null,
 ds_adress varchar(150) not null,
 ds_number varchar(15),
 ds_complement varchar(150),
 cd_zip_code varchar(22),
 primary key (cseq_adress)
);
alter table if exists luleke_invest.adress 
 add constraint fk_cseq_city01 foreign key (cseq_city) references luleke_invest.adress_city;

/* BROKER ############# */
create table IF NOT EXISTS luleke_invest.broker_status (
 cd_status integer not null primary key,
 ds_status varchar(50) not null
);

create table IF NOT EXISTS luleke_invest.broker (
 cseq_broker integer generated by default as identity,
 cd_status integer not null,
 ds_name varchar(150) not null,
 ds_ein varchar(20) not null,
 cseq_adress bigint not null,
 primary key (cseq_broker)
);
alter table if exists luleke_invest.broker 
 add constraint fk_cd_status01 foreign key (cd_status) references luleke_invest.broker_status;
alter table if exists luleke_invest.broker 
 add constraint fk_cseq_adress01 foreign key (cseq_adress) references luleke_invest.adress;

/* COMPANY ############# */
create table IF NOT EXISTS luleke_invest.company (
 cseq_company bigint generated by default as identity,
 ds_name varchar(150) not null,
 ds_ein varchar(20) not null,
 cseq_adress bigint not null,
 primary key (cseq_company)
);
alter table if exists luleke_invest.company 
 add constraint fk_cseq_adress02 foreign key (cseq_adress) references luleke_invest.adress;

/* STOCK_EXCHANGE ############*/
create table IF NOT EXISTS luleke_invest.stock_exchange (
 cseq_stock_exchange integer generated by default as identity,
 ds_name varchar(150) not null,
 ds_ein varchar(20) not null,
 cseq_adress bigint not null,
 primary key (cseq_stock_exchange)
);
alter table if exists luleke_invest.stock_exchange 
 add constraint fk_cseq_adress03 foreign key (cseq_adress) references luleke_invest.adress;

/* FINANCIAL_ASSET ############*/
create table IF NOT EXISTS luleke_invest.financial_asset_category (
 cd_financial_asset_category integer not null,
 ds_name varchar(150) not null,
 primary key (cd_financial_asset_category)
);

create table IF NOT EXISTS luleke_invest.financial_asset (
 cseq_financial_asset bigint generated by default as identity,
 cseq_stock_exchange integer not null,
 ds_ticker varchar(50) not null,
 cseq_company bigint,
 cseq_financial_asset_category integer not null,
 dh_last_update timestamp not null,
 primary key (cseq_financial_asset)
);
alter table if exists luleke_invest.financial_asset 
 add constraint fk_cseq_stock_exchange01 foreign key (cseq_stock_exchange) references luleke_invest.stock_exchange;
alter table if exists luleke_invest.financial_asset 
 add constraint fk_cseq_company01 foreign key (cseq_company) references luleke_invest.company;
alter table if exists luleke_invest.financial_asset 
 add constraint fk_cseq_financial_asset_category01 foreign key (cseq_financial_asset_category) references luleke_invest.financial_asset_category;

create table IF NOT EXISTS luleke_invest.financial_asset_event (
 cseq_financial_asset_event bigint generated by default as identity,
 cseq_financial_asset bigint not null,
 ts_ocurrence timestamp not null,
 dt_share_position date not null,
 primary key (cseq_financial_asset_event)
);
alter table if exists luleke_invest.financial_asset_event 
 add constraint fk_cseq_financial_asset01 foreign key (cseq_financial_asset) references luleke_invest.financial_asset;

create table IF NOT EXISTS luleke_invest.financial_asset_event_bonus_share (
 cseq_financial_asset_event bigint not null,
 vl_unit_cost numeric(20,2) not null,
 qtd_asset_bonus integer not null,
 qtd_asset_each integer not null,
 primary key (cseq_financial_asset_event)
);
alter table if exists luleke_invest.financial_asset_event_bonus_share 
 add constraint fk_cseq_financial_asset_event01 foreign key (cseq_financial_asset_event) references luleke_invest.financial_asset_event;

create table IF NOT EXISTS luleke_invest.financial_asset_event_dividend (
 cseq_financial_asset_event bigint not null,
 vl_value_by_quote numeric(38,2) not null,
 vl_approved_total_amount numeric(38,2) not null,
 ts_announcement timestamp not null,
 dt_expected_payment date not null,
 primary key (cseq_financial_asset_event)
);
alter table if exists luleke_invest.financial_asset_event_dividend 
 add constraint fk_cseq_financial_asset_event02 foreign key (cseq_financial_asset_event) references luleke_invest.financial_asset_event;

create table IF NOT EXISTS luleke_invest.financial_asset_event_inplit_split (
 cseq_financial_asset_event bigint not null,
 proportion_from integer not null,
 proportion_to integer not null,
 primary key (cseq_financial_asset_event)
);
alter table if exists luleke_invest.financial_asset_event_inplit_split 
 add constraint fk_cseq_financial_asset_event03 foreign key (cseq_financial_asset_event) references luleke_invest.financial_asset_event;

create table IF NOT EXISTS luleke_invest.financial_asset_event_jcp (
 cseq_financial_asset_event bigint not null,
 vl_value_by_quote numeric(38,2) not null,
 vl_approved_total_amount numeric(38,2) not null,
 ts_announcement timestamp not null,
 dt_start_referred_period timestamp not null,
 dt_end_referred_period timestamp not null,
 dt_expected_payment timestamp not null,
 dt_share_position timestamp not null,
 primary key (cseq_financial_asset_event)
);
alter table if exists luleke_invest.financial_asset_event_jcp 
 add constraint fk_cseq_financial_asset_event04 foreign key (cseq_financial_asset_event) references luleke_invest.financial_asset_event;

/*QUOTE ###############*/
create table IF NOT EXISTS luleke_invest.financial_asset_quote (
 cseq_financial_asset bigint not null,
 dh_trade timestamp not null,
 vl_open_price numeric(38,2) not null,
 vl_max_price numeric(38,2) not null,
 vl_min_price numeric(38,2) not null,
 vl_price numeric(38,2) not null,
 qtd_volume integer not null,
 primary key (cseq_financial_asset, dh_trade)
);
alter table if exists luleke_invest.financial_asset_quote 
 add constraint fk_cseq_financial_asset02 foreign key (cseq_financial_asset) references luleke_invest.financial_asset;

/*WALLET ##############*/
create table IF NOT EXISTS luleke_invest.wallet (
 cseq_wallet bigint generated by default as identity,
 cseq_user bigint not null,
 dh_created timestamp not null,
 dh_last_calculation timestamp not null,
 primary key (cseq_wallet)
);
alter table if exists luleke_invest.wallet 
 add constraint fk_cseq_user02 foreign key (cseq_user) references luleke_invest.user_data;

create table IF NOT EXISTS luleke_invest.financial_transaction_type (
 cd_financial_transaction_type integer not null,
 ds_name varchar(100),
 primary key (cd_financial_transaction_type)
);

create table IF NOT EXISTS luleke_invest.financial_transaction (
 cseq_financial_transaction bigint generated by default as identity,
 dh_ocurrence timestamp not null,
 cseq_wallet bigint not null,
 cseq_financial_asset bigint not null,
 cd_financial_transaction_type integer not null,
 qtd_asset integer not null,
 unitary_value numeric(38,2) not null,
 fee_value numeric(38,2) not null,
 primary key (cseq_financial_transaction)
);